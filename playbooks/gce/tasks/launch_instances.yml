---

- name: debug instances names
  debug: msg="{{ instances }}"

- name: debug zone
  debug: msg="{{ lookup('env', 'ZONE') }}"

- name: debug network
  debug: msg="{{ lookup('env', 'NETWORK') }}"

- name: debug pem_file
  debug: msg="{{ lookup('env', 'GCE_SERVICE_ACCOUNT_PEM_FILE_PATH') }}"
 
- name: debug email
  debug: msg="{{ lookup('env', 'GCE_SERVICE_ACCOUNT_EMAIL_ADDRESS') }}"

- name: debug project
  debug: msg="{{ lookup('env', 'GCE_PROJECT_ID') }}"

#    - name: Launch instances
#      gce:
#          instance_names: origin-v3-master-f6094
#          machine_type: "{{ machine_type_large }}"
#          image: "{{ image }}"
#          service_account_email: "{{ service_account_email }}"
#          credentials_file: "{{ credentials_file }}"
#          project_id: "{{ project_id }}"
#          tags: origin
#      register: gce


- name: Launch instance(s)
  gce:
#    instance_names: "{{ instances }}"
    instance_names: "tm1-dbsrv-32afe"
    machine_type: "{{ gce_machine_type | default(deployment_vars['default'].machine_type, true) }}"
    image: "{{ gce_machine_image | default(deployment_vars['default'].image, true) }}"
    service_account_email: "{{ lookup('env', 'GCE_SERVICE_ACCOUNT_EMAIL_ADDRESS') }}"
    credentials_file: "{{ lookup('env', 'GCE_CREDENTIALS_FILE_PATH') }}"
    #pem_file: "{{ lookup('env', 'GCE_SERVICE_ACCOUNT_PEM_FILE_PATH') }}"
    project_id: "{{ lookup('env', 'GCE_PROJECT_ID') }}"
#    zone: "{{ lookup('env', 'ZONE') }}"
#    network: "{{ lookup('env', 'NETWORK') }}"
# unsupported in 1.9.+
    #service_account_permissions: "datastore,logging-write"
#    tags:
#      - created-by-{{ lookup('env', 'LOGNAME') |default(cluster, true) }}
#      - clusterid-{{ cluster_id }}
#    metadata:
#      startup-script: |
#        #!/bin/bash
#        echo "Defaults:{{ deployment_vars['default'].ssh_user }} !requiretty" > /etc/sudoers.d/99-{{ deployment_vars['default'].ssh_user }}

  when: instances |length > 0
  register: gce

#- name: Add new instances to groups and set variables needed
#  add_host:
#    hostname: "{{ item.name }}"
#    ansible_ssh_host: "{{ item.public_ip }}"
#    ansible_ssh_user: "{{ deployment_vars['default'].ssh_user }}"
#    ansible_become: "{{ deployment_vars['default'].become }}"
#    groups: "{{ item.tags | oo_prepend_strings_in_list('tag_') | join(',') }}"
#    gce_public_ip: "{{ item.public_ip }}"
#    gce_private_ip: "{{ item.private_ip }}"
#  with_items: gce.instance_data | default([], true)

- name: Wait for ssh
  wait_for: port=22 host={{ item.public_ip }}
  with_items: gce.instance_data | default([], true)

- name: Wait for user setup
  command: "ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null {{ hostvars[item.name].ansible_ssh_user }}@{{ item.public_ip }} echo {{ hostvars[item.name].ansible_ssh_user }} user is setup"
  register: result
  until: result.rc == 0
  retries: 30
  delay: 5
  
